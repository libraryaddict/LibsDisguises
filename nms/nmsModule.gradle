// Code copied from https://github.com/Shopkeepers/Shopkeepers/tree/master

apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.gradle.plugin.idea-ext'

apply from: rootProject.file('nms/specialSource.gradle')

ext {
    // This needs to be defined by projects that apply this script.
    craftbukkitVersion = 'UNSPECIFIED'
    // This can be overridden by projects that apply this script.
    remapServerCode = true
}

dependencies {
    implementation project(':shared')
    implementation(libs.org.spigotmc.spigot.api)
    compileOnly libs.io.netty.netty.buffer
    compileOnly libs.it.unimi.dsi.fastutil
    compileOnly libs.com.mojang.datafixerupper
    compileOnly libs.com.retro.packetevents
    afterEvaluate {
        if (remapServerCode) {
            implementation "org.spigotmc:spigot:${craftbukkitVersion}:remapped-mojang"
            implementation "org.spigotmc:spigot:${craftbukkitVersion}:remapped-obf"
            implementation "org.spigotmc:minecraft-server:${craftbukkitVersion}:maps-mojang@txt"
            implementation "org.spigotmc:minecraft-server:${craftbukkitVersion}:maps-spigot@csrg"
        } else {
            implementation "org.spigotmc:spigot:${craftbukkitVersion}"
        }
    }
}

// Define the directory for the generated sources.
def generatedSourcesDir = file("$buildDir/generated/java/main")

task generateSharedNmsSources(type: Copy) {
    doFirst {
        delete(generatedSourcesDir)
    }

    from project(':nms').sourceSets.main.java
    into generatedSourcesDir

    eachFile { FileCopyDetails details ->
        String newPath = details.relativePath.pathString.replace("version", project.description)
        details.setRelativePath(RelativePath.parse(true, newPath))
    }

    filter { String line ->
        line.replace("v1_17_R1", project.description)
            .replace("package me.libraryaddict.disguise.utilities.reflection.version;",
            "package me.libraryaddict.disguise.utilities.reflection.${project.description};")
    }

    outputs.upToDateWhen { false }
}

// Add the generated sources to the main source set.
sourceSets.main.java.srcDir generatedSourcesDir

// Make the compileJava task depend on the source generation task.
compileJava.dependsOn generateSharedNmsSources

// Configure the 'idea' plugin to recognize the generated source directory.
rootProject.idea {
    module {
        generatedSourceDirs += generatedSourcesDir
    }

    project {
        settings {
            taskTriggers {
                beforeSync generateSharedNmsSources
            }
        }
    }
}

afterEvaluate {
    if (remapServerCode) {
        jar {
            doLast {
                def outputFiles = outputs.files.files
                for (inputFile in outputFiles) {
                    File intermediateFile = new File(temporaryDir, inputFile.name.replace('.jar', '-obf.jar'))
                    File outputFile = inputFile
                    remapMojangToSpigot(inputFile, intermediateFile, outputFile, craftbukkitVersion)
                }
            }
        }
    }
}

// Note: The NMS modules are not published as standalone artifacts, but are shaded into the final plugin jar.
